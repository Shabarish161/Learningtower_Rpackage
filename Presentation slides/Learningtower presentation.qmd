---
title: "Learningtower: Comparative Analysis of PISA 2022 and Historical Data"
title-slide-attributes: 
  data-background-image: "../images/bg.png"
  data-background-size: 100%
author: "Shabarish Sai and Guan Ru Chen"
date: "18 Oct 2024"
institute: "Department of Econometrics and Business Statistics"
format:
  revealjs:
    multiplex: false
    slide-number: c/t
    slide-tone: false
    theme: "../assets/monash.scss"
    width: 1600
    height: 900
    margin: 0.05
    embed-resources: true
---

```{r include=FALSE}
library(tidyverse)
library(dplyr)
library(ggplot2)
library(here)
library(patchwork)
library(plotly)
library(kableExtra)
library(learningtower)
```

```{r, include = FALSE}
source(here("setup.R"))
```

## Contributors 
:::: {.columns}

::: {.column width="20%"}
<img src="../images/brickwork.png">
Shabarish Sai Subramanian
:::

::: {.column width="20%"}
<img src="../images/brickwork.png">
Guan Ru, Chen
:::

::: {.column width="20%"}
<img src="../images/brickwork.png">
Dianne Cook
:::

::: {.column width="20%"}
<img src="../images/brickwork.png">
Kevin Y.X. Wang
:::

::: {.column width="20%"}
<img src="../images/brickwork.png">
Priya Ravindra Dingorkar
:::

::::




## Introduction

The learningtower R package is designed to streamline the analysis of OECD's Programme for International Student Assessment (PISA) data. This package provides access to datasets from 2000 to 2022, allowing researchers to explore trends in education, student performance, and other contextual factors. It simplifies the process of handling large, complex datasets, making it easier to conduct comparative studies across countries and years. Currently, we are updating the 2022 version of the learningtower package to ensure compatibility with the latest PISA data and functionalities

## `Learningtower` Package {background-image="../images/logo.png" background-position="5% 15%" background-size="15%"}

<br><br><br><br>
The `Learningtower` package provides access to PISA datasets from 2000 to 2022, allowing researchers to explore trends in education, student performance, and other contextual factors. 

In `Learningtower` contain mainly 3 datasets:

- [Student]{.monash-blue2} is a dataset of students scores in mathematics, reading and science.
- [School]{.monash-blue2} is a dataset of school's detailed information, i.e. school weight, school funding distribution, private/public sectors, etc.
- [Countrycode]{.monash-blue2} is a dataset of a mapping of a country/regionâ€™s ISO code to its full name.


## What is Programme for International Student Assessment (PISA)? {.smaller}

::: {.callout-tip title="Global Examination"}
Measures student performance in reading, math, and science
:::

::: {.callout-tip title="Target Group"}
Assesses 15-year-old students' knowledge and skills
:::

::: {.callout-tip title="Global Reach"}
81 OECD member countries, 700,000+ students in **2022**
:::

:::{.callout-tip title="Educational Environment Research"}
Additional questionnaires done by students, teachers, and school principals to gather contextual data on educational environments, socio-economic status, and more.
:::

## PISA Dataset

```{r Dataset}
#| echo: false

student_full <- readRDS("../Data/student_2022.rds")
kable(head(student_full)) |> 
  kable_paper() |> 
  scroll_box(width = "100%", height = "50%")
```


## Variable Description
From original dataset, We collect the following variables:

- [**Year**]{.monash-blue2}

- [**Country**]{.monash-blue2}

- [**School**]{.monash-blue2}

- [**Student information**]{.monash-blue2}: ID, gender, test scores, student weight

- [**Economic factors**]{.monash-blue2}, such as: Parent's education level, household belongings(i.e. computer, internet, etc.) as well as constructed index like `escs`. 




## Gender Gap Analysis {.transition-slide .center style="text-align: center;"}


## Math

```{r}
#| echo: false
student_data_2018_2022 <- load_student(c(2018, 2022))
data("countrycode")

math_score <- student_data_2018_2022 %>% 
  group_by(country, year) %>%  
  dplyr::filter(country %in% c("AUS", "NZL", "JPN" , "SGP", 
                               "SAU", "TUR", "USA", "FIN",
                               "UKR", "BRA", "ARG", "MAR")) %>% 
  dplyr::summarise(avg_math = mean(math, na.rm = TRUE)) %>%  
  left_join(countrycode, by = "country") %>% 
  dplyr::select(country_name, year, avg_math) %>% 
  ungroup() %>% 
  dplyr::mutate(
    year = year %>% as.character %>% as.integer, 
    label_x_pos = ifelse(year == 2018, 2018 - 2, 2022 + 1),
    label = ifelse(
      year == 2018,
      paste0(country_name, ", ", round(avg_math)),
      round(avg_math)))
  
math_score_plot <- math_score %>% 
  ggplot(aes(x = year, 
             y = avg_math,
             label = label,
             colour = country_name,
             group = country_name)) +
  geom_point() +
  geom_line() +
  geom_vline(xintercept=2018,
             linetype="dashed",
             linewidth=0.1) +
  geom_vline(xintercept=2022,
             linetype="dashed",
             linewidth=0.1) + 
  geom_text(aes(x = label_x_pos),
            position = position_nudge(y = 0)) +
  scale_x_continuous(breaks = c(2018, 2022),
                     limits = c(2014, 2024)) +
  scale_colour_manual(values = c("#1F77B4FF", "#FF7F0EFF", "#2CA02CFF", "#D62728FF", 
                                 "#9467BDFF", "#8C564BFF", "#E377C2FF", "#7F7F7FFF",
                                 "#17BECFFF", "#BCBD22FF", "#F7B6D2FF", "#AEC7E8FF")) +
  labs(x = "",
       y = "Average maths score") +
  theme_classic() +
  theme(axis.ticks.y = element_blank(),
        axis.text.y = element_blank(),
        legend.position = "none")
math_score_plot
```

```{r}
#| echo: false
#| 
load(here("data/math_diff_conf_intervals.rda"))
math_diff_conf_intervals <- math_diff_conf_intervals %>%
  dplyr::filter(country_name %in%
                  c("Australia",
                    "New Zealand",
                    "Japan",
                    "Singapore",
                    "Saudi Arabia",
                    "Turkey",
                    "United States",
                    "Finland",
                    "Ukraine",
                    "Brazil",
                    "Argentina",
                    "Morocco")) 
  
diff_math_plot <- ggplot(math_diff_conf_intervals,
                    aes(diff, country_name,
                        col = score_class)) +
  scale_colour_manual("",
      values = c("boys"="#3288bd",
                 "nodiff"="#969696",
                 "girls"="#f46d43")) +
  geom_point() +
  geom_errorbar(aes(xmin = lower, xmax = upper), width=0) +
  geom_vline(xintercept = 0, color = "#969696") +
  labs(y = "",
  x = "",
  title = "Math"
  ) +
  theme(legend.position="none") +
  annotate("text", x = 50, y = 1, label = "Girls") +
  annotate("text", x = -50, y = 1, label = "Boys") +
  scale_x_continuous(limits = c(-70, 70),
                     breaks = seq(-60, 60, 20),
                     labels = abs(seq(-60, 60, 20)))+
  theme(legend.position="right")
diff_math_plot
```


## Reading
```{r}
#| echo: false
read_score <- student_data_2018_2022 %>% 
  group_by(country, year) %>%  
  dplyr::filter(country %in% c("AUS", "NZL", "JPN" , "SGP", 
                               "SAU", "TUR", "USA", "FIN",
                               "UKR", "BRA", "ARG", "MAR")) %>% 
  dplyr::summarise(avg_read = mean(read, na.rm = TRUE)) %>%  
  left_join(countrycode, by = "country") %>% 
  dplyr::select(country_name, year, avg_read) %>% 
  ungroup() %>% 
  dplyr::mutate(
    year = year %>% as.character %>% as.integer, 
    label_x_pos = ifelse(year == 2018, 2018 - 2, 2022 + 1),
    label = ifelse(
      year == 2018,
      paste0(country_name, ", ", round(avg_read)),
      round(avg_read)))
  
read_score_plot <- read_score %>% 
  ggplot(aes(x = year, 
             y = avg_read,
             label = label,
             colour = country_name,
             group = country_name)) +
  geom_point() +
  geom_line() +
  geom_vline(xintercept=2018,
             linetype="dashed",
             linewidth=0.1) +
  geom_vline(xintercept=2022,
             linetype="dashed",
             linewidth=0.1) + 
  geom_text(aes(x = label_x_pos),
            position = position_nudge(y = 0)) +
  scale_x_continuous(breaks = c(2018, 2022),
                     limits = c(2014, 2024)) +
  scale_colour_manual(values = c("#1F77B4FF", "#FF7F0EFF", "#2CA02CFF", "#D62728FF", 
                                 "#9467BDFF", "#8C564BFF", "#E377C2FF", "#7F7F7FFF",
                                 "#17BECFFF", "#BCBD22FF", "#F7B6D2FF", "#AEC7E8FF")) +
  labs(x = "",
       y = "Average reading score") +
  theme_classic() +
  theme(axis.ticks.y = element_blank(),
        axis.text.y = element_blank(),
        legend.position = "none")
read_score_plot
```


```{r}
#| echo: false
load(here("data/read_diff_conf_intervals.rda"))
read_diff_conf_intervals <- read_diff_conf_intervals %>%
  dplyr::filter(country_name %in%
                  c("Australia",
                    "New Zealand",
                    "Japan",
                    "Singapore",
                    "Saudi Arabia",
                    "Turkey",
                    "United States",
                    "Finland",
                    "Ukraine",
                    "Brazil",
                    "Argentina",
                    "Morocco")) 
  
diff_read_plot <- ggplot(read_diff_conf_intervals,
                    aes(diff, country_name,
                        col = score_class)) +
  scale_colour_manual("",
      values = c("boys"="#3288bd",
                 "nodiff"="#969696",
                 "girls"="#f46d43")) +
  geom_point() +
  geom_errorbar(aes(xmin = lower, xmax = upper), width=0) +
  geom_vline(xintercept = 0, color = "#969696") +
  labs(y = "",
  x = "",
  title = "Reading"
  ) +
  theme(legend.position="none") +
  annotate("text", x = 50, y = 1, label = "Girls") +
  annotate("text", x = -50, y = 1, label = "Boys") +
  scale_x_continuous(limits = c(-70, 70),
                     breaks = seq(-60, 60, 20),
                     labels = abs(seq(-60, 60, 20)))
diff_read_plot
```



## Science

```{r}
#| echo: false
sci_score <- student_data_2018_2022 %>% 
  group_by(country, year) %>%  
  dplyr::filter(country %in% c("AUS", "NZL", "JPN" , "SGP", 
                               "SAU", "TUR", "USA", "FIN",
                               "UKR", "BRA", "ARG", "MAR")) %>% 
  dplyr::summarise(avg_sci = mean(science, na.rm = TRUE)) %>%  
  left_join(countrycode, by = "country") %>% 
  dplyr::select(country_name, year, avg_sci) %>% 
  ungroup() %>% 
  dplyr::mutate(
    year = year %>% as.character %>% as.integer, 
    label_x_pos = ifelse(year == 2018, 2018 - 2, 2022 + 1),
    label = ifelse(
      year == 2018,
      paste0(country_name, ", ", round(avg_sci)),
      round(avg_sci)))
  
sci_score_plot <- sci_score %>% 
  ggplot(aes(x = year, 
             y = avg_sci,
             label = label,
             colour = country_name,
             group = country_name)) +
  geom_point() +
  geom_line() +
  geom_vline(xintercept=2018,
             linetype="dashed",
             linewidth=0.1) +
  geom_vline(xintercept=2022,
             linetype="dashed",
             linewidth=0.1) + 
  geom_text(aes(x = label_x_pos),
            position = position_nudge(y = 0)) +
  scale_x_continuous(breaks = c(2018, 2022),
                     limits = c(2014, 2024)) +
  scale_colour_manual(values = c("#1F77B4FF", "#FF7F0EFF", "#2CA02CFF", "#D62728FF", 
                                 "#9467BDFF", "#8C564BFF", "#E377C2FF", "#7F7F7FFF",
                                 "#17BECFFF", "#BCBD22FF", "#F7B6D2FF", "#AEC7E8FF")) +
  labs(x = "",
       y = "Average science score") +
  theme_classic() +
  theme(axis.ticks.y = element_blank(),
        axis.text.y = element_blank(),
        legend.position = "none")
sci_score_plot
```


```{r}
#| echo: false
load(here("data/sci_diff_conf_intervals.rda"))
sci_diff_conf_intervals <- sci_diff_conf_intervals %>%
  dplyr::filter(country_name %in%
                  c("Australia",
                    "New Zealand",
                    "Japan",
                    "Singapore",
                    "Saudi Arabia",
                    "Turkey",
                    "United States",
                    "Finland",
                    "Ukraine",
                    "Brazil",
                    "Argentina",
                    "Morocco")) 
  
sci_plot <- ggplot(sci_diff_conf_intervals,
                    aes(diff, country_name,
                        col = score_class)) +
  scale_colour_manual("",
      values = c("boys"="#3288bd",
                 "nodiff"="#969696",
                 "girls"="#f46d43")) +
  geom_point() +
  geom_errorbar(aes(xmin = lower, xmax = upper), width=0) +
  geom_vline(xintercept = 0, color = "#969696") +
  labs(y = "",
  x = "",
  title = "Science"
  ) +
  theme(legend.position="none") +
  annotate("text", x = 50, y = 1, label = "Girls") +
  annotate("text", x = -50, y = 1, label = "Boys") +
  scale_x_continuous(limits = c(-70, 70),
                     breaks = seq(-60, 60, 20),
                     labels = abs(seq(-60, 60, 20)))
sci_plot
```



## World Map

```{r}
#| echo: false
theme_map <- function(...) {
  theme_minimal() +
  theme(
    text = element_text(),
    axis.line = element_blank(),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    panel.border = element_blank(),
    panel.grid = element_blank()
  )
}

region2country = function(region_name){
  country_name = case_when(
    region_name == "Brunei Darussalam" ~ "Brunei",
    region_name == "United Kingdom" ~ "UK",
    region_name %in% c("Macau SAR China", "B-S-J-Z (China)",
                        "Hong Kong SAR China") ~ "China",
    region_name == "Korea" ~ "South Korea",
    region_name == "North Macedonia" ~ "Macedonia",
    region_name == "Baku (Azerbaijan)" ~ "Baku",
    region_name %in% c("Moscow Region (RUS)", "Tatarstan (RUS)",
                        "Russian Federation") ~ "Russia",
    region_name == "Slovak Republic" ~ "Slovakia",
    region_name == "Chinese Taipei" ~ "Taiwan",
    region_name == "United States" ~ "USA",
    TRUE ~ as.character(region_name))
}
```

```{r}
#| echo: false
world_map <- map_data("world") %>%
  filter(region != "Antarctica") %>%
  fortify() %>%
  rename(country_name = region)

math_map_data <- math_diff_conf_intervals  %>%
  dplyr::mutate(country_name = region2country(region_name = country_name)) 

math_world_data <- full_join(
  x = math_map_data,
  y = world_map,
  by = "country_name") %>% 
  rename(Country = country_name,
         math = diff) %>%
  mutate(math = round(math, digits = 2))
```

```{r}
#| echo: false
read_map_data <- read_diff_conf_intervals %>%
  dplyr::mutate(country_name = region2country(region_name = country_name))

read_world_data <- full_join(
  x = read_map_data,
  y = world_map,
  by = "country_name") %>% 
  rename(Country = country_name,
         Reading = diff) %>%
  mutate(Reading = round(Reading, digits = 2))
```

```{r}
#| echo: false
sci_map_data <- sci_diff_conf_intervals %>%
  dplyr::mutate(country_name = region2country(region_name = country_name))

sci_world_data <- full_join(
  x = sci_map_data,
  y = world_map,
  by = "country_name") %>% 
  rename(Country = country_name,
         Science = diff)  %>%
  mutate(Science = round(Science, digits = 2))
```

```{r}
#| echo: false
math_dat <- math_world_data %>%
  dplyr::select(Country, math, lat, long, group)

read_dat <- read_world_data %>%
  dplyr::select(Country, Reading, lat, long, group)

sci_dat <- sci_world_data %>%
  dplyr::select(Country, Science, lat, long, group)

math_read_dat <- left_join(math_dat,
                           read_dat,
                           by = c("Country","lat", "long", "group"))

math_read_sci_dat <- left_join(math_read_dat,
                           sci_dat,
                           by = c("Country","lat", "long", "group"))

math_read_sci_dat_wider <- math_read_sci_dat %>%
    pivot_longer(cols = c(2,6,7), names_to = "subjects")

mrs_maps <- ggplot(math_read_sci_dat_wider,
       aes(x = long,
           y = lat,
           group = group)) +
  geom_polygon(aes(fill= value,
                   label = Country)) +
  facet_wrap(~subjects, scales = "free", nrow = 3) +
  theme_map() +
  labs(title = "World Map displaying Gender Gap Scores in Math, Reading and Science")  +
  scale_fill_distiller(palette = "Spectral")
```

```{r}
#| code-fold: true
#| fig-width: 12
#| fig-height: 10

ggplotly(mrs_maps)
```



## EcoSocio Factors Analysis {.transition-slide .center style="text-align: center;"}


## Temporal Analysis {.transition-slide .center style="text-align: center;"}

## Comparison
```{r}
#| echo: false
#| 
student_all <- load(here("data/student.rda"))
data("countrycode")
student_country <- left_join(student,
                             countrycode,
                             by = "country") %>%
  dplyr::filter(country_name %in%
                  c("Australia",
                    "New Zealand",
                    "Japan",
                    "Singapore",
                    "Saudi Arabia",
                    "Turkey",
                    "United States",
                    "Finland",
                    "Ukraine",
                    "Brazil",
                    "Argentina",
                    "Morocco")) %>%
  dplyr::select(year, country_name, math, read, science, stu_wgt) %>%
  na.omit() %>%
  pivot_longer(c(math, read, science), names_to = "subject", values_to = "score")

# Compute the bootstrap confidence intervals, and cache result
if (!file.exists("data/all_bs_cf.rda")) {
  all_bootstrap <- map_dfr(1:100, ~{
    student_country %>%
    group_by(country_name, #year,
             subject) %>%
    #sample_n(size = n(), replace = TRUE) %>%
    mutate(year = sample(year, replace=FALSE)) %>%
    group_by(country_name, year,
             subject) %>%
    dplyr::summarise(
      avg = weighted.mean(score, w = stu_wgt, na.rm = TRUE), .groups = "drop") %>%
    #ungroup() %>%
    mutate(boot_id = .x)
  })

  all_bootstrap_ci <- all_bootstrap %>%
    group_by(country_name, year,
             subject) %>%
    summarise(
      lower = min(avg), # sort(avg)[5],
      upper = max(avg), #sort(avg)[95],
      .groups = "drop")

  # compute original estimate of average and join
  all_avg <- student_country %>%
    group_by(country_name, year, subject) %>%
    summarise(
      avg = weighted.mean(score,
                          w = stu_wgt, na.rm = TRUE),
      .groups = "drop")

  all_bs_cf <- left_join(all_avg,
                      all_bootstrap_ci,
                      by = c("country_name",
                             "year",
                             "subject"))

  save(all_bs_cf, file= here("data/all_bs_cf.rda"))

} else {
  load(here("data/all_bs_cf.rda"))
}

```

```{r}
#| echo: false
#| 
load(here("data/all_bs_cf.rda"))
all_bs_cf <- all_bs_cf %>%
  mutate(year = as.numeric(as.character(year)),
         country_name = factor(country_name),
         Country = country_name)
                 # levels = c("Australia",
                 #    "New Zealand",
                 #    "Japan",
                 #    "Singapore",
                 #    "Saudi Arabia",
                 #    "Turkey",
                 #    "United States",
                 #    "Finland",
                 #    "Ukraine",
                 #    "Brazil",
                 #    "Argentina",
                 #    "Morocco"))


country_names_highlight <- c("Australia",
                            "New Zealand",
                            "Japan",
                            "Singapore",
                            "Saudi Arabia",
                            "Turkey",
                            "United States",
                            "Finland",
                            "Ukraine",
                            "Brazil",
                            "Argentina",
                            "Morocco")
```

```{r}
#| echo: false
#| 
math_all_bs_cf_plot <- all_bs_cf %>% 
  dplyr::filter(subject == "math") %>% 
  ggplot(aes(x = year, 
             y = avg,
             colour = Country)) +
  geom_point(alpha = 0.45) +
  geom_line(aes(group = Country))
```

```{r}
#| echo: false
read_all_bs_cf_plot <- all_bs_cf %>% 
  dplyr::filter(subject == "read") %>% 
  ggplot(aes(x = year, 
             y = avg,
             colour = Country)) +
  geom_point(alpha = 0.45) +
  geom_line(aes(group = Country)) 
```

```{r}
#| echo: false
sci_all_bs_cf_plot <- all_bs_cf %>% 
  dplyr::filter(subject == "science") %>% 
  ggplot(aes(x = year,
             y = avg,
             colour = Country)) +
  geom_point(alpha = 0.45) +
  geom_line(aes(group = Country))
```

```{r}
#| echo: false
subplot(
    ggplotly(math_all_bs_cf_plot),
    ggplotly(read_all_bs_cf_plot),
    ggplotly(sci_all_bs_cf_plot),
    nrows = 1) |> 
  plotly::layout(showlegend = FALSE,
  title = "Temporal Patterns in math, reading and science scroes across countries") 
```

## Explanation for Temporal Analysis

From 2000 to 2022, the three charts show the temporal trends of math, reading, and science student performance scores in various nations. Labels are used to draw attention to certain countries' performance trends, and each line shows the average score for that nation.

-   Mathematics: Singapore routinely ranks top, whereas Brazil and Peru have lower scores with some positive trends. Around the 500 score point, nations like Belgium, Australia, and Germany continue to perform comparatively steadily.

-   Reading: Australia, Belgium, and Canada continue to do well, while Singapore once again takes the lead. Thailand, Brazil, and Peru perform worse, though they gradually become better.

-   Science: Australia, Germany, and Belgium retain mid-range ratings, while Singapore and Canada perform at the top. Despite having lower scores, Brazil and Peru have shown some development.

## Limitations

Although the Learningtower package makes it easier to access the PISA dataset, it has drawbacks, including less customisation options for more complex analyses, performance problems with huge datasets, and possible incompatibilities with other R versions. Furthermore, for more complicated use scenarios, the documentation might not be adequate. Inherent limitations of the PISA dataset include the fact that it is cross-sectional, which precludes longitudinal tracking, the possibility of sample biases, and the difficulties caused by linguistic and cultural differences that could compromise the comparability of results. Furthermore, the depth of analysis may be constrained by incomplete or missing data, a lack of socioeconomic indicators, and out-of-date background questionnaires. Lastly, the emphasis on standardised test scores may obscure more important educational objectives that the tests do not measure, such creativity and critical thinking.

# Thank You
